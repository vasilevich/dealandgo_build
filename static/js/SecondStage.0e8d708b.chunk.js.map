{"version":3,"sources":["data/redux/selectors/transactionSelector.ts","../node_modules/@material-ui/icons/CheckCircle.js","gui/pages/mainRouter/pages/ad/components/commons/secondStage/components/passengersForm/PassengersForm.module.scss","gui/pages/mainRouter/pages/ad/components/commons/secondStage/components/passengersForm/components/passenger/Passenger.module.scss","gui/components/transactionIFrame/TransactionIFrame.module.scss","gui/pages/mainRouter/pages/ad/components/commons/secondStage/components/phoneForm/PhoneForm.module.scss","../node_modules/@material-ui/icons/CreditCard.js","gui/pages/mainRouter/pages/ad/components/commons/secondStage/components/passengersForm/components/passenger/Passenger.tsx","gui/pages/mainRouter/pages/ad/components/commons/secondStage/components/passengersForm/PassengersForm.tsx","data/enums/orders.ts","gui/components/transactionIFrame/TransactionIFrame.tsx","data/redux/containers/transactionIFrameContainer/TransactionIFrameContainer.ts","gui/pages/mainRouter/pages/ad/components/commons/secondStage/components/phoneForm/PhoneForm.tsx","data/redux/containers/phoneFormContainer/PhoneFormContainer.ts","gui/pages/mainRouter/pages/ad/components/commons/secondStage/SecondStage.tsx"],"names":["transactionSelector","product","createSelector","transactions","find","transaction","product_id","id","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","module","isSubmittedPassengersForm","passengers","passenger","values","filter","v","length","Passenger","props","hasPassengers","style","marginTop","marginBottom","className","styles","PassengerLabel","sm","fontWeight","ticketIndex","fontSize","Grid","container","spacing","item","xs","component","TextField","label","name","variant","autoComplete","errors","touched","required","fullWidth","readOnly","onChange","e","setFieldValue","allowOnlyEnglish","target","toUpperCase","onBlur","submitForm","condition","birthDate","paddingTop","FormikDateSelector","minDate","maxDate","Date","format","onClose","setTimeout","defaultProps","memo","PassengersForm","initialValues","validations","i","Yup","min","max","firstName","lastName","submitClicked","user","validationSchema","onSubmit","a","key","setSubmitting","passengersArray","numberLessKey","replace","keys","includes","push","slice","enableReinitialize","isSubmitting","submitCount","translate","map","index","Button","continueButton","disabled","onClick","formValues","Promise","resolve","Transaction_Type","paymentProviderToIframeHeight","paymentProvider","Meshulam","CreditGuard","TransactionIFrame","loading","beginTransaction","beginTransactionOnRender","options","isThereATransaction","useEffect","TransactionIframe","type","width","height","marginLeft","marginRight","display","color","ErrorText","code","ErrorCode","url","transaction_type","frameBorder","purchaseButtons","SkeletonPlaceHolder","creditCard","join","bit","LazyImage","src","title","TransactionIFrameContainer","connect","state","ownProps","isLoadingSelector","dispatch","yupSchema","phone","PhoneForm","InfoCard","icon","SupervisorAccountIcon","toolTip","defaultExpanded","updateProfile","FormikPhoneInput","PhoneFormContainer","userSelector","getPatchUserActionCreator","SecondStage","userHasPhoneNumber","submitPassengersClicked","order","beginOrder","CreditCardIcon","ticketsAmount"],"mappings":"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","file":"static/js/SecondStage.0e8d708b.chunk.js","sourcesContent":["import {createSelector} from 'redux-starter-kit';\nimport {ITransaction} from 'data/redux/reducers/transactionsReducer';\n\nexport const transactionSelector = ((product) => createSelector([`transactions`], (transactions: ITransaction[]) => {\n  return transactions.find(transaction => transaction.product_id === product.id);\n}));\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\n\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PassengersForm\":\"PassengersForm_PassengersForm__1Qhri\",\"continueButton\":\"PassengersForm_continueButton__2Hvf7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PassengerLabel\":\"Passenger_PassengerLabel__2R4B_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TransactionIframe\":\"TransactionIFrame_TransactionIframe__1JxjF\",\"purchaseButtons\":\"TransactionIFrame_purchaseButtons__1u6jM\",\"continueButton\":\"TransactionIFrame_continueButton__3Kqd_\",\"creditCard\":\"TransactionIFrame_creditCard__1uShy\",\"bit\":\"TransactionIFrame_bit__27I8E\",\"paypalContainer\":\"TransactionIFrame_paypalContainer__iOaO-\",\"code\":\"TransactionIFrame_code__3VpRB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PhoneForm\":\"PhoneForm_PhoneForm__1TPUB\",\"continueButton\":\"PhoneForm_continueButton__3jdGF\"};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 4H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2zm0 14H4v-6h16v6zm0-10H4V6h16v2z\"\n}), 'CreditCard');\n\nexports.default = _default;","import React from \"react\";\nimport styles from './Passenger.module.scss';\nimport {MDBCol, MDBRow} from 'mdbreact';\nimport {Grid} from '@material-ui/core';\nimport {FastField} from 'formik';\nimport {TextField} from 'formik-material-ui';\nimport FormikDateSelector from 'gui/components/formikDateSelector/FormikDateSelector';\nimport {allowOnlyEnglish} from 'data/utils/shortcuts';\nimport {If, Then} from \"react-if\";\n\nexport interface IPassengerProps {\n  readOnly?: boolean;\n  ticketIndex: number;\n  errors: any;\n  touched: any;\n  passengers: any;\n\n  setFieldValue: any;\n  submitForm: any;\n\n}\n\nexport const isSubmittedPassengersForm = (passengers) => {\n  for (const passenger of passengers) {\n    if (Object.values(passenger).filter(v => !v).length > 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\nconst Passenger = (props: IPassengerProps) => {\n  const hasPassengers = isSubmittedPassengersForm(props.passengers);\n  return (\n    <>\n      <MDBRow style={{marginTop: 10, marginBottom: 10}}/>\n      <MDBRow className={styles.PassengerLabel}>\n        <MDBCol sm=\"12\" style={{fontWeight: 500}}>\n          נוסע {props.ticketIndex}\n        </MDBCol>\n      </MDBRow>\n      <MDBRow style={{fontSize: \"1em\"}}>\n        <MDBCol sm=\"12\" style={{fontWeight: 500}}>\n          <Grid container spacing={2}>\n            <Grid item style={{marginTop: 15}} xs={12} sm={4}>\n              <FastField\n                component={TextField}\n                label=\"שם פרטי(אנגלית)\"\n                id={`firstName${props.ticketIndex}`}\n                name={`firstName${props.ticketIndex}`}\n                variant=\"outlined\"\n                autoComplete=\"fname\"\n                className={(!props.errors[`firstName${props.ticketIndex}`] && props.touched[`firstName${props.ticketIndex}`]) ? \"valid\" : \"\"}\n                required\n                fullWidth\n                readOnly={props.readOnly}\n                onChange={(e) => {\n                  props.setFieldValue(`firstName${props.ticketIndex}`, allowOnlyEnglish(e.target.value).toUpperCase());\n                }}\n                onBlur={(e) => {\n                  if (hasPassengers) {\n                    props.submitForm();\n                  }\n                }}\n              />\n            </Grid>\n            <Grid item style={{marginTop: 15}} xs={12} sm={4}>\n              <FastField\n                component={TextField}\n                label=\"שם משפחה(אנגלית)\"\n                id={`lastName${props.ticketIndex}`}\n                name={`lastName${props.ticketIndex}`}\n                variant=\"outlined\"\n                autoComplete=\"lname\"\n                className={(!props.errors[`lastName${props.ticketIndex}`] && props.touched[`lastName${props.ticketIndex}`]) ? \"valid\" : \"\"}\n                required\n                fullWidth\n                readOnly={props.readOnly}\n                onChange={(e) => {\n                  props.setFieldValue(`lastName${props.ticketIndex}`, allowOnlyEnglish(e.target.value).toUpperCase());\n                }}\n                onBlur={(e) => {\n                  if (hasPassengers) {\n                    props.submitForm();\n                  }\n                }}\n              />\n            </Grid>\n            <If condition={props.passengers[props.ticketIndex - 1].birthDate !== 9999999999999}>\n              <Then>\n                {() => <Grid item xs={12} sm={4} style={{paddingTop: 22}}>\n                  <FastField\n                    component={FormikDateSelector}\n                    label=\"תאריך לידה\"\n                    name={`birthDate${props.ticketIndex}`}\n                    minDate={0}\n                    maxDate={new Date()}\n                    format=\"DD/MM/YYYY\"\n                    onClose={() => {\n                      if (hasPassengers) {\n                        setTimeout(() => props.submitForm(), 1500);\n                      }\n                    }}\n                  />\n                </Grid>}\n              </Then>\n            </If>\n          </Grid>\n        </MDBCol>\n      </MDBRow>\n    </>\n  );\n};\n\nPassenger.defaultProps = {\n  ticketIndex: 1,\n  passengers: [],\n};\n\nexport default React.memo(Passenger);\n","import React from 'react';\nimport styles from './PassengersForm.module.scss';\nimport {Button, Grid} from '@material-ui/core';\nimport {Form, Formik} from 'formik';\nimport * as Yup from \"yup\";\nimport Passenger, {isSubmittedPassengersForm} from 'gui/pages/mainRouter/pages/ad/components/commons/secondStage/components/passengersForm/components/passenger/Passenger';\nimport {IUser} from 'data/redux/reducers/authenticationReducer';\nimport {allowOnlyEnglish} from 'data/utils/shortcuts';\nimport {If, Then} from \"react-if\";\nimport FormikErrorScrollToTop from 'formik-top-error-focus';\n\ninterface IPurchaseFormProps {\n  readOnly?: boolean;\n  passengers: any;\n  user?: IUser;\n  onSubmit: (formValues) => Promise<any>;\n}\n\n\nconst PassengersForm = (props: IPurchaseFormProps) => {\n  const initialValues = {};\n  const validations = {};\n  for (let i = 1; i <= props.passengers.length; i++) {\n    validations[`firstName${i}`] = Yup.string()\n      .min(2, \"שם פרטי צריך להיות 2 אותיות לפחות\")\n      .max(15, \"שם פרטי יכול להיות עד 15 אותיות\")\n      .required(\"נדרש שם פרטי\");\n    validations[`lastName${i}`] = Yup.string()\n      .min(2, \"שם משפחה חייב להיות 2 אותיות לפחות\")\n      .max(20, \"שם משפחה יכול להיות עד 20 אותיות\")\n      .required(\"נדרש שם משפחה\");\n    if (props.passengers[i - 1].birthDate !== 9999999999999)\n      validations[`birthDate${i}`] = Yup.mixed().required(\"יש לבחור תאריך לידה\");\n    initialValues[`firstName${i}`] = props.passengers[i - 1].firstName;\n    initialValues[`lastName${i}`] = props.passengers[i - 1].lastName;\n    initialValues[`birthDate${i}`] = props.passengers[i - 1].birthDate;\n\n  }\n  const submitClicked = isSubmittedPassengersForm(props.passengers);\n  return (\n    <Formik\n      initialValues={\n        {\n          ...initialValues,\n          'firstName1': allowOnlyEnglish(props.user.firstName).toUpperCase(),\n          'lastName1': allowOnlyEnglish(props.user.lastName).toUpperCase(),\n        }\n      }\n      validationSchema={Yup.object({\n\n        ...validations,\n      })}\n      onSubmit={async (values, {setSubmitting}) => {\n        setSubmitting(false);\n        const passengersArray = [{}];\n        for (const key in values) {\n          const value = values[key];\n          const numberLessKey = key.replace(/[0-9]/g, '');\n          if (Object.keys(passengersArray[passengersArray.length - 1]).includes(numberLessKey)) {\n            passengersArray.push({});\n          }\n          passengersArray[passengersArray.length - 1][numberLessKey] = value;\n        }\n        await props\n          .onSubmit(passengersArray.slice(0, props.passengers.length));\n      }}\n      enableReinitialize={false}\n    >\n      {({submitForm, isSubmitting, values, submitCount, touched, errors, setFieldValue}) => {\n        return (\n          <Form className={styles.PassengersForm} translate={null}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                אנא מלאו את פרטי הנוסעים בדיוק כפי שמופיע בדרכון.\n                <br/>\n                שינוי בפרטים לאחר שליחת ההזמנה עשוי להיות כרוך בתשלום (בהתאם לתנאי הכרטיס / שובר).\n              </Grid>\n              <Grid item xs={12} className=\"\">\n                {props\n                  .passengers\n                  .map((passenger, index) => (\n                    <Passenger key={index + 1}\n                               errors={errors}\n                               touched={touched}\n                               ticketIndex={index + 1}\n                               readOnly={!submitClicked || props.readOnly}\n                               passengers={props.passengers}\n                               setFieldValue={setFieldValue}\n                               submitForm={submitForm}\n                    />\n                  ))}\n              </Grid>\n              <If condition={!submitClicked}>\n                <Then>\n                  <Grid item style={{marginTop: 40, marginBottom: 20}} xs={12}>\n                    <Button\n                      className={styles.continueButton}\n                      variant=\"contained\"\n                      disabled={isSubmitting}\n                      onClick={submitForm}\n                    >\n                      המשך להזנת פרטי תשלום\n                    </Button>\n                  </Grid>\n                </Then>\n              </If>\n            </Grid>\n            <FormikErrorScrollToTop/>\n          </Form>\n        )\n      }}\n    </Formik>\n  );\n};\n\nPassengersForm.defaultProps = {\n  passengers: {},\n  onSubmit: (formValues) => new Promise((resolve) => {\n    setTimeout(resolve, 1000);\n  }),\n};\n\nexport default React.memo(PassengersForm);\n","export enum Transaction_Type {\n  CreditGuard = \"creditguard\",\n  Meshulam = \"meshulam\",\n  Paypal = \"paypal\",\n}\n","import React, {useEffect} from 'react';\nimport {Case, Switch} from \"react-if\";\nimport Iframe from 'react-iframe';\nimport {Button} from '@material-ui/core';\nimport styles from './TransactionIFrame.module.scss';\nimport {IProduct} from 'data/interfaces/products';\nimport {MDBCol, MDBRow} from 'mdbreact';\nimport {ITransaction} from 'data/redux/reducers/transactionsReducer';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport {IOrderOptions} from 'data/interfaces/orders';\nimport {Transaction_Type} from 'data/enums/orders';\nimport SkeletonPlaceHolder from 'gui/components/skeletonPlaceHolder';\nimport LazyImage from 'gui/components/LazyImage/LazyImage';\n\n/*\nimport {PayPalButton} from \"react-paypal-button-v2\";\nimport {currencyValueToISO} from 'gui/components/formikCurrencySelector';\n\n      <MDBRow style={{marginTop: 40, textDecoration: 'underline'}}>\n              <MDBCol sm=\"12\">\n                <h3>תשלום דרך פייפל</h3>\n              </MDBCol>\n            </MDBRow>\n<MDBRow>\n  <MDBCol sm=\"12\"\n          className={styles.paypalContainer}\n  >\n    <PayPalButton\n      options={{\n        clientId: \"ARGbhsg2Cy4USMMqjun_MfMz8v3XwQEc7b8HWAxtdOzgZOpIg5BlFkXxMSICP_iWdlqS5t5EvHsE1k6L\",\n        currency: currencyValueToISO[product.saleDetails.currency]\n      }}\n      currency={currencyValueToISO[product.saleDetails.currency]}\n      amount={product.saleDetails.askingPrice}\n      // shippingPreference=\"NO_SHIPPING\" // default is \"GET_FROM_FILE\"\n      onSuccess={(details, data) => {\n        console.log(\"Transaction completed by \" + details.payer.name.given_name, data);\n\n\n      }}\n\n    />\n  </MDBCol>\n</MDBRow>\n*/\n\ninterface ITransactionProps {\n  url: string;\n  product: IProduct;\n  options: IOrderOptions;\n  beginTransaction: (IProduct, options) => void;\n  transaction: ITransaction;\n  beginTransactionOnRender: boolean;\n  loading?: boolean;\n}\n\nconst paymentProviderToIframeHeight = (paymentProvider = Transaction_Type.Meshulam) => {\n  switch (paymentProvider) {\n    case Transaction_Type.Meshulam:\n      return 630;\n    case Transaction_Type.CreditGuard:\n      return 630;\n  }\n  return 630;\n}\n\nconst TransactionIFrame = ({\n                             loading,\n                             beginTransaction,\n                             beginTransactionOnRender,\n                             product,\n                             options,\n                             ...props\n                           }: ITransactionProps) => {\n    const isThereATransaction = !!props.transaction;\n    useEffect(() => {\n      if (beginTransactionOnRender === true && isThereATransaction !== true) {\n        beginTransaction(product, options);\n      }\n    }, [beginTransactionOnRender, beginTransaction, isThereATransaction, product, options]);\n    return (\n      <div className={styles.TransactionIframe}>\n        <Switch>\n          <Case condition={isThereATransaction && props.transaction.type === \"SUCCESS\"}>\n            {() => <>\n              <MDBRow>\n                <MDBCol>\n                  <h2>\n                    <CheckCircleIcon\n                      style={{\n                        width: 150,\n                        height: 150,\n                        marginLeft: 'auto',\n                        marginRight: 'auto',\n                        display: 'block',\n                        color: '#7fff3ebf',\n                      }}\n                    />\n                  </h2>\n                </MDBCol>\n              </MDBRow>\n            </>\n            }\n          </Case>\n          <Case condition={isThereATransaction && props.transaction.type === \"ERROR\"}>\n            {() => <>\n              <MDBRow>\n                <MDBCol>\n                  <h2 style={{color: \"red\"}}>תקלה</h2>\n                </MDBCol>\n              </MDBRow>\n              <MDBRow>\n                <MDBCol>\n                  <h3>{props.transaction.ErrorText}</h3>\n                </MDBCol>\n              </MDBRow>\n              <MDBRow>\n                <MDBCol>\n                  <div className={styles.code}>{props.transaction.ErrorCode}</div>\n                </MDBCol>\n              </MDBRow>\n              <MDBRow>\n                <MDBCol>\n                  <Button\n                    className={styles.continueButton}\n                    fullWidth\n                    variant=\"contained\"\n                    onClick={() => beginTransaction(product, options)}\n                  >\n                    נסה לבצע סליקה שוב\n                  </Button>\n                </MDBCol>\n              </MDBRow>\n            </>\n            }\n          </Case>\n          <Case condition={isThereATransaction}>{() =>\n            <Iframe\n              url={props.transaction.url}\n              height={`${paymentProviderToIframeHeight(options.transaction_type)}px`}\n              width=\"100%\"\n              frameBorder={0}\n              loading='eager'\n            />\n          }\n          </Case>\n          <Case condition={!beginTransactionOnRender}>\n            <div className={styles.purchaseButtons}>\n              {loading ?\n                <SkeletonPlaceHolder className={[styles.continueButton, styles.creditCard].join(\" \")}/> :\n                <Button\n                  className={[styles.continueButton, styles.creditCard].join(\" \")}\n                  variant=\"contained\"\n                  onClick={() => beginTransaction(product, {\n                    ...options,\n                    transaction_type: Transaction_Type.Meshulam,\n                    bit: false,\n                  })}\n                >\n                  תשלום בכרטיס אשראי\n                </Button>}\n              {loading ?\n                <SkeletonPlaceHolder className={[styles.continueButton, styles.bit].join(\" \")}/> :\n                <Button\n                  className={[styles.continueButton, styles.bit].join(\" \")}\n                  variant=\"contained\"\n                  onClick={() => beginTransaction(product, {\n                    ...options,\n                    transaction_type: Transaction_Type.Meshulam,\n                    bit: true,\n                  })}\n                >\n                  תשלום עם\n                  <LazyImage src={'/img/bitNoBackground.png'} title='bit'/>\n                </Button>}\n            </div>\n          </Case>\n        </Switch>\n      </div>\n    )\n  }\n;\nTransactionIFrame.defaultProps =\n  {\n    beginTransactionOnRender: false,\n  }\n;\nexport default React.memo(TransactionIFrame);\n","import {connect} from 'react-redux'\nimport {IProduct} from 'data/interfaces/products';\n\nimport {transactionSelector} from 'data/redux/selectors/transactionSelector';\nimport {beginTransaction} from 'data/redux/actions/transactionsActions';\nimport TransactionIFrame from 'gui/components/transactionIFrame';\nimport {isLoadingSelector} from 'data/redux/selectors/guiSelector';\n\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    transaction: transactionSelector(ownProps.product)(state),\n    loading: isLoadingSelector(state),\n    ...ownProps\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    beginTransaction: (product: IProduct, options: any) => dispatch(beginTransaction(product, options)),\n  };\n};\n\nconst TransactionIFrameContainer = connect(mapStateToProps, mapDispatchToProps)(TransactionIFrame);\n\nexport default TransactionIFrameContainer;\n","import React from 'react';\nimport styles from './PhoneForm.module.scss';\nimport {Button, Grid} from '@material-ui/core';\nimport {Form, Formik} from 'formik';\nimport * as Yup from \"yup\";\nimport {IUser} from 'data/redux/reducers/authenticationReducer';\nimport FormikPhoneInput from 'gui/components/formikPhoneInput';\nimport InfoCard from 'gui/pages/mainRouter/pages/ad/components/commons/infoCard';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\n\ninterface IPurchaseFormProps {\n  readOnly?: boolean;\n  user?: IUser;\n  updateProfile?: (formValues) => Promise<any>;\n}\n\nconst yupSchema = Yup.object({\n  phone: Yup.string()\n    .min(8, \"יש להזין מספר נייד\")\n    .max(10, \"יש להזין מספר נייד\")\n    .required(\"יש להזין מספר נייד\"),\n});\n\nconst PhoneForm = (props: IPurchaseFormProps) => {\n  return (\n    <InfoCard\n      title=\"פרטי תקשורת\"\n      icon={SupervisorAccountIcon}\n      toolTip=\"פירוט\"\n      defaultExpanded={true}\n    >\n      <Formik\n        initialValues={\n          {\n            phone: \"\",\n          }\n        }\n        validationSchema={yupSchema}\n        onSubmit={async (values, {setSubmitting}) => {\n          setSubmitting(false);\n          await props\n            .updateProfile(values);\n        }}\n        enableReinitialize={false}\n      >\n        {({submitForm, isSubmitting, values, submitCount, touched, errors, setFieldValue}) => {\n          return (\n            <Form className={styles.PhoneForm} translate={null}>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  אנא מלא את הטלפון הנייד שלך\n                  <br/>\n                  כדי לקבל שינויי סטאטוס להצאה שלך\n                </Grid>\n                <Grid item xs={12} className=\"\">\n                  <Grid item style={{marginTop: 15}} xs={12} sm={6}>\n                    <FormikPhoneInput\n                      label=\"מספר טלפון\"\n                      name=\"phone\"\n                    />\n                  </Grid>\n                </Grid>\n                <Grid item style={{marginTop: 40, marginBottom: 20}} xs={12}>\n                  <Button\n                    className={styles.continueButton}\n                    fullWidth\n                    variant=\"contained\"\n                    disabled={isSubmitting}\n                    onClick={submitForm}\n                  >\n                    המשך להזנת פרטי נוסעים\n                  </Button>\n                </Grid>\n              </Grid>\n            </Form>\n          )\n        }}\n      </Formik>\n    </InfoCard>\n  );\n};\n\nPhoneForm.defaultProps = {\n  passengers: {},\n  onSubmit: (formValues) => new Promise((resolve) => {\n    setTimeout(resolve, 1000);\n  }),\n};\n\nexport default React.memo(PhoneForm);\n","import {connect} from 'react-redux'\nimport {userSelector} from 'data/redux/selectors/userSelector';\nimport {getPatchUserActionCreator} from 'data/redux/actions/usersActions';\nimport PhoneForm from 'gui/pages/mainRouter/pages/ad/components/commons/secondStage/components/phoneForm';\n\nconst mapStateToProps = (state) => {\n  return {\n    user: userSelector(state),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateProfile: (formValues) => dispatch(getPatchUserActionCreator(formValues)),\n  };\n};\n\n\nconst PhoneFormContainer = connect(mapStateToProps, mapDispatchToProps)(PhoneForm);\n\nexport default PhoneFormContainer;\n","import React from 'react';\nimport InfoCard from 'gui/pages/mainRouter/pages/ad/components/commons/infoCard/InfoCard';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport PassengersForm\n  from 'gui/pages/mainRouter/pages/ad/components/commons/secondStage/components/passengersForm/PassengersForm';\nimport {IUser} from 'data/redux/reducers/authenticationReducer';\nimport {Else, If, Then} from \"react-if\";\nimport TransactionIFrameContainer from 'data/redux/containers/transactionIFrameContainer/TransactionIFrameContainer';\nimport {IProduct} from 'data/interfaces/products';\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\nimport {IOrder, IOrderOptions} from 'data/interfaces/orders';\nimport {isSubmittedPassengersForm} from 'gui/pages/mainRouter/pages/ad/components/commons/secondStage/components/passengersForm/components/passenger';\nimport {Transaction_Type} from 'data/enums/orders';\nimport PhoneFormContainer from 'data/redux/containers/phoneFormContainer';\n\ninterface ISecondPageProps {\n  ticketsAmount?: number;\n  user?: IUser;\n  order: IOrder;\n  product?: IProduct;\n  beginOrder?: (product: IProduct, options: IOrderOptions) => Promise<void>;\n}\n\nconst SecondStage = (props: ISecondPageProps) => {\n  const userHasPhoneNumber = !!(props.user && typeof props.user.phone === 'string' && props.user.phone.length >= 8 && props.user.phone.length <= 15);\n  const submitPassengersClicked = isSubmittedPassengersForm(props.order.options.passengers);\n  return (\n    <>\n      <If condition={userHasPhoneNumber}>\n        <Then>{() =>\n          <>\n            <InfoCard\n              title=\"פירוט נוסעים\"\n              icon={SupervisorAccountIcon}\n              toolTip=\"פירוט\"\n              defaultExpanded={true}\n            >\n              <PassengersForm user={props.user}\n                              passengers={props.order.options.passengers}\n                              onSubmit={(formValues) => {\n                                props.beginOrder(props.product, {passengers: formValues});\n                                return Promise.resolve();\n                              }}\n              />\n            </InfoCard>\n            <If condition={submitPassengersClicked}>\n              <Then>\n                <InfoCard\n                  title=\"פרטי תשלום\"\n                  icon={CreditCardIcon}\n                  toolTip=\"פירוט\"\n                  defaultExpanded={true}\n                >\n                  <TransactionIFrameContainer\n                    product={props.product}\n                    options={{\n                      ticketsAmount: props.order.options.passengers.length,\n                      transaction_type: Transaction_Type.Meshulam,\n                    } as IOrderOptions}\n                  />\n                </InfoCard>\n              </Then>\n            </If>\n          </>}\n        </Then>\n        <Else>\n          <PhoneFormContainer/>\n        </Else>\n      </If>\n    </>\n  )\n};\n\nSecondStage.defaultProps = {};\n\nexport default React.memo(SecondStage);\n"],"sourceRoot":""}