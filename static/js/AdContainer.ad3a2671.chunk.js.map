{"version":3,"sources":["data/redux/selectors/transactionSelector.ts","data/redux/containers/adContainer/AdContainer.ts"],"names":["transactionSelector","product","createSelector","transactions","find","transaction","product_id","id","AdContainer","connect","state","ownProps","adProductSelector","adPageUrlSelector","restParsedUrl","order","orderSelector","user","userSelector","allowNavigation","getNavigationAllowed","parseInt","isProductOwner","isProductOwnerSelector","isOrderOwner","isProductOrderOwnerSelector","AuthenticatedMapStateToProps","dispatch","loadAdPage","getLoadProductActionCreator","loadAllOrdersToProduct","getLoadProductOrdersActionCreator","beginOrder","options","autoFixSlug","goToCheckout","navigateIfNotThere","linksMap","checkoutIdSlug","replace","Ad"],"mappings":"uIAAA,uDAGaA,EAAuB,SAACC,GAAD,OAAaC,IAAe,CAAC,iBAAiB,SAACC,GACjF,OAAOA,EAAaC,MAAK,SAAAC,GAAW,OAAIA,EAAYC,aAAeL,EAAQM,W,yKCuCvEC,EAAcC,aA5BI,SAACC,EAAOC,GAC9B,IAAMV,EAAUW,YAAkBF,GADS,EAEPG,YAAkBH,GAA/CH,EAFoC,EAEpCA,GAAOO,EAF6B,sBAG3C,OAAO,qCACLb,QAASA,EACTc,MAAOC,YAAcf,EAAde,CAAuBN,GAC9BL,YAAaL,YAAoBC,EAApBD,CAA6BU,GAC1CO,KAAMC,YAAaR,GACnBS,gBAAiBC,YAAqBV,GACtCH,GAAIc,SAASd,GAAM,GACnBe,eAAgBC,YAAuBb,GACvCc,aAAcC,YAA4BxB,EAA5BwB,CAAqCf,IAChDI,GACAY,YAA6BhB,IAC7BC,MAIoB,SAACgB,GAC1B,MAAO,CACLC,WAAY,SAACrB,GAAD,OAAgBoB,EAASE,YAA4BtB,KACjEuB,uBAAwB,SAACxB,GAAD,OAAgBqB,EAASI,YAAkCzB,KACnF0B,WAAY,SAAC/B,EAASgC,GAAV,OAAsBN,EAASK,YAAW/B,EAASgC,KAC/DC,YAAa,SAACjC,GAAD,OAAa0B,EAASO,YAAYjC,KAC/CkC,aAAc,SAAC5B,GAAD,OAAgBoB,EAASS,YAAmBC,IAASC,eAAeC,QAAQ,MAAOhC,SAIjFE,CAA6C+B,KAElDhC","file":"static/js/AdContainer.ad3a2671.chunk.js","sourcesContent":["import {createSelector} from 'redux-starter-kit';\nimport {ITransaction} from 'data/redux/reducers/transactionsReducer';\n\nexport const transactionSelector = ((product) => createSelector([`transactions`], (transactions: ITransaction[]) => {\n  return transactions.find(transaction => transaction.product_id === product.id);\n}));\n","import {connect} from 'react-redux'\n\nimport {adPageUrlSelector, adProductSelector, isProductOwnerSelector} from 'data/redux/selectors/productSelector';\nimport {getLoadProductActionCreator} from 'data/redux/actions/productsActions';\nimport Ad from 'gui/pages/mainRouter/pages/ad/Ad';\nimport {linksMap} from 'data/utils/constants';\nimport {getNavigationAllowed} from 'data/redux/selectors/routerSelector';\nimport {AuthenticatedMapStateToProps} from 'data/redux/containers/commons/Commons';\nimport {userSelector} from 'data/redux/selectors/userSelector';\nimport {transactionSelector} from 'data/redux/selectors/transactionSelector';\nimport {beginOrder, getLoadProductOrdersActionCreator} from 'data/redux/actions/ordersActions';\nimport {isProductOrderOwnerSelector, orderSelector} from 'data/redux/selectors/orderSelector';\nimport {autoFixSlug} from 'data/redux/actions/guiActions';\nimport {navigateIfNotThere} from 'data/redux/actions/navigationActions';\n\nconst mapStateToProps = (state, ownProps) => {\n  const product = adProductSelector(state);\n  const {id, ...restParsedUrl}: any = adPageUrlSelector(state);\n  return {\n    product: product,\n    order: orderSelector(product)(state),\n    transaction: transactionSelector(product)(state),\n    user: userSelector(state),\n    allowNavigation: getNavigationAllowed(state),\n    id: parseInt(id || 0),\n    isProductOwner: isProductOwnerSelector(state),\n    isOrderOwner: isProductOrderOwnerSelector(product)(state),\n    ...restParsedUrl,\n    ...AuthenticatedMapStateToProps(state),\n    ...ownProps,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loadAdPage: (id: number) => dispatch(getLoadProductActionCreator(id)),\n    loadAllOrdersToProduct: (product_id) => dispatch(getLoadProductOrdersActionCreator(product_id)),\n    beginOrder: (product, options) => dispatch(beginOrder(product, options)),\n    autoFixSlug: (product) => dispatch(autoFixSlug(product)),\n    goToCheckout: (id: number) => dispatch(navigateIfNotThere(linksMap.checkoutIdSlug.replace(\":id\", id as any))),\n  };\n};\n\nconst AdContainer = connect(mapStateToProps, mapDispatchToProps)(Ad as any);\n\nexport default AdContainer;\n"],"sourceRoot":""}