{"version":3,"sources":["gui/pages/controlRouter/pages/profile/Profile.module.scss","gui/pages/controlRouter/pages/profile/components/profileForm/ProfileForm.module.scss","gui/pages/controlRouter/pages/profile/components/profileForm/components/profileImageChanger/ProfileImageChanger.module.scss","gui/pages/controlRouter/pages/profile/components/authenticationForm/AuthenticationForm.module.scss","gui/pages/controlRouter/pages/profile/components/profileForm/components/profileImageChanger/ProfileImageChanger.tsx","gui/pages/controlRouter/pages/profile/components/profileForm/ProfileForm.tsx","gui/pages/controlRouter/pages/profile/components/authenticationForm/AuthenticationForm.tsx","gui/pages/controlRouter/pages/profile/Profile.tsx","data/redux/containers/profileContainer/ProfileContainer.ts","gui/pages/controlRouter/ControlRouter.tsx"],"names":["module","exports","ProfileImageChanger","onChange","props","useState","user","profilePicture","selectedImage","selectImage","onDrop","useCallback","acceptedFiles","FileReader","length","fr","onload","datas","wantedWidth","wantedHeight","Promise","resolve","reject","a","img","document","createElement","width","height","canvas","ctx","getContext","drawImage","this","toDataURL","src","resizeDataURL","result","then","s","readAsDataURL","useDropzone","getRootProps","getInputProps","isDragActive","className","styles","profileImageChangerContainer","condition","referrerPolicy","alt","loading","profilePhoto","yupSchema","Yup","email","min","max","required","retypeEmail","oneOf","firstName","lastName","phone","ProfileForm","init","allowAdvertisementEmails","jsonInit","JSON","stringify","initialValues","validationSchema","onSubmit","values","setSubmitting","enableReinitialize","submitForm","isSubmitting","resetForm","setFieldValue","setFieldError","touched","errors","translate","profileForm","file","formFields","Grid","container","spacing","item","style","marginTop","xs","sm","FormikTextInput","label","name","autoComplete","e","allowOnlyEnglishAutoConvert","target","value","toUpperCase","customErrorsObject","emailUniqueError","toLowerCase","FormikPhoneInput","NewsLettersCheckbox","Button","updateButtons","updateButton","fullWidth","variant","disabled","onClick","restoreButton","defaultProps","formValues","setTimeout","React","memo","password","matches","retypePassword","undefined","AuthenticationForm","showUpdatePassword","discardObjectKeys","key","includes","authenticationForm","formPad","marginBottom","FormikPasswordInput","cancelError","cancelTouch","facebookId","color","fontWeight","FacebookLoginButtonContainer","maxWidth","text","onlyAuth","googleId","GoogleIcon","GoogleLoginButtonContainer","Profile","profileContainer","CrispChatContainer","updateProfile","Divider","AuthenticatedPage","ProfileContainer","connect","state","userSelector","isLoadingSelector","AuthenticatedMapStateToProps","dispatch","getPatchUserActionCreator","AuthenticatedMapDispatchToProps","ControlRouter","PageWithSidebarStructure","navigation","PredefinedMenuList","sideBarControlNavigationContainer","path","linksMap","dashboard","DashboardContainer","productsByMe","ProductsByMeContainer","ordersByMe","OrdersByMeContainer","profile"],"mappings":"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","file":"static/js/ControlRouter.32da84d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"Profile_profileContainer__3aH9r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileForm\":\"ProfileForm_profileForm__2RCpN\",\"updateButtons\":\"ProfileForm_updateButtons__Knkcy\",\"updateButton\":\"ProfileForm_updateButton__3kppT\",\"restoreButton\":\"ProfileForm_restoreButton__1Qukq\",\"formFields\":\"ProfileForm_formFields__yXEvL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileImageChangerContainer\":\"ProfileImageChanger_profileImageChangerContainer__1V1A3\",\"profilePhoto\":\"ProfileImageChanger_profilePhoto__pBtp9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authenticationForm\":\"AuthenticationForm_authenticationForm__NSq8B\",\"updateButtons\":\"AuthenticationForm_updateButtons__18Au0\",\"updateButton\":\"AuthenticationForm_updateButton__13lRN\",\"restoreButton\":\"AuthenticationForm_restoreButton__PnHJw\",\"formPad\":\"AuthenticationForm_formPad__3yALJ\",\"formFields\":\"AuthenticationForm_formFields__krojy\"};","import React, {useCallback, useState} from 'react';\nimport styles from './ProfileImageChanger.module.scss';\nimport {IUser} from 'data/redux/reducers/authenticationReducer';\nimport {useDropzone} from 'react-dropzone';\nimport {Else, If, Then} from 'react-if';\n\nexport interface IProfileImageChanger {\n  user: IUser;\n  onChange: (file: any) => any;\n}\n\nfunction resizeDataURL(datas, wantedWidth = 158, wantedHeight = 158) {\n  return new Promise(async function (resolve, reject) {\n\n    // We create an image to receive the Data URI\n    const img = document.createElement('img');\n\n    // When the event \"onload\" is triggered we can resize the image.\n    img.onload = function () {\n      if (img.width > wantedWidth || img.height > wantedHeight) {\n        // We create a canvas and get its context.\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n\n        // We set the dimensions at the wanted size.\n        canvas.width = wantedWidth;\n        canvas.height = wantedHeight;\n\n        // We resize the image with the canvas method drawImage();\n        ctx.drawImage(this as any, 0, 0, wantedWidth, wantedHeight);\n\n        // This is the return of the Promise\n        resolve(canvas.toDataURL());\n      } else {\n        resolve(datas);\n      }\n    };\n    // We put the Data URI in the image's src attribute\n    img.src = datas;\n\n  })\n}\n\nconst ProfileImageChanger = ({onChange, ...props}: IProfileImageChanger) => {\n  const [selectedImage, selectImage] = useState((props.user && props.user.profilePicture) || \"/img/profilePlaceholder.png\");\n  const onDrop = useCallback(acceptedFiles => {\n    // FileReader support\n    if (FileReader && acceptedFiles && acceptedFiles.length) {\n      const fr = new FileReader();\n      fr.onload = function () {\n        resizeDataURL(fr.result)\n          .then(s => {\n            selectImage(s as any);\n            onChange(s);\n          });\n      }\n      fr.readAsDataURL(acceptedFiles[0]);\n    }\n    // Not supported\n    else {\n      // fallback -- perhaps submit the input to an iframe and temporarily store\n      // them on the server until the user's session ends.\n    }\n  }, [selectImage, onChange])\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n  return (\n    <section {...getRootProps()} className={styles.profileImageChangerContainer}>\n      <input {...getInputProps()} />\n      <If condition={isDragActive}>\n        <Then>\n          {() => <>\n            <img referrerPolicy=\"no-referrer\"\n                 alt=\"dropHere\"\n                 src=\"/img/dropHere.png\"\n                 loading=\"lazy\"\n            />\n            <br/>\n            שחרר את התמונה פה\n          </>}\n        </Then>\n        <Else>\n          {() => <>\n            <img referrerPolicy=\"no-referrer\"\n                 alt=\"profilePhoto\"\n                 className={styles.profilePhoto}\n                 src={selectedImage}\n                 loading=\"lazy\"\n            />\n            <br/>\n            <small>גרור תמונה או לחץ כדי לשנות</small>\n          </>}\n        </Else>\n      </If>\n    </section>\n  );\n};\n\n\nexport default ProfileImageChanger;\n","import React from 'react';\nimport {Button, Grid} from '@material-ui/core';\nimport {Form, Formik} from 'formik';\nimport * as Yup from \"yup\";\nimport styles from './ProfileForm.module.scss';\nimport FormikPhoneInput from 'gui/components/formikPhoneInput/FormikPhoneInput';\nimport {allowOnlyEnglishAutoConvert} from 'data/utils/shortcuts';\n\nimport {IUser} from 'data/redux/reducers/authenticationReducer';\nimport {Unless} from 'react-if';\nimport ProfileImageChanger from './components/profileImageChanger/ProfileImageChanger';\nimport FormikErrorScrollToTop from 'formik-top-error-focus';\nimport NewsLettersCheckbox from 'gui/components/newsLettersCheckBox';\nimport FormikTextInput from 'gui/components/formikTextInput';\n\ninterface IProfileFormProps {\n  onSubmit: (formValues) => Promise<any>;\n  emailUniqueError?: boolean;\n  user: IUser;\n  loading?: boolean;\n}\n\nconst yupSchema = Yup.object({\n  email: Yup.string()\n    .min(4, 'מייל קצר מדיי')\n    .max(60, 'מייל ארוך מדיי')\n    .email(\"מייל לא תקין\")\n    .required(\"נדרש מייל\"),\n  retypeEmail: Yup.string()\n    .min(4, 'מייל קצר מדיי')\n    .max(60, 'מייל ארוך מדיי')\n    .oneOf([Yup.ref('email'), null], 'מייל לא זהה')\n    .required(\"נדרש להזין מייל שוב\"),\n  firstName: Yup.string()\n    .min(2, \"שם פרטי צריך להיות 2 אותיות לפחות\")\n    .max(15, \"שם פרטי יכול להיות עד 15 אותיות\")\n    .required(\"נדרש שם פרטי\"),\n  lastName: Yup.string()\n    .min(2, \"שם משפחה צריך להיות 2 אותיות לפחות\")\n    .max(20, \"שם משפחה יכול להיות עד 20 אותיות\")\n    .required(\"נדרש שם משפחה\"),\n  phone: Yup.string()\n    .min(8, \"יש להזין מספר נייד\")\n    .max(10, \"יש להזין מספר נייד\")\n    .required(\"יש להזין מספר נייד\"),\n\n  profilePicture: Yup.mixed(),\n});\n\nconst ProfileForm = ({loading, ...props}: IProfileFormProps) => {\n  const init = {\n    email: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    phone: \"\",\n    allowAdvertisementEmails: false,\n    ...props.user,\n    retypeEmail: props.user.email || \"\",\n  };\n  const jsonInit = JSON.stringify(init);\n  return (\n    <Formik\n      initialValues={init}\n      validationSchema={yupSchema}\n      onSubmit={async (values, {setSubmitting}) => {\n        setSubmitting(false);\n        props\n          .onSubmit({...values});\n      }}\n      enableReinitialize={true}\n    >\n      {({submitForm, isSubmitting, resetForm, setFieldValue, setFieldError, values, touched, errors}) => (\n        <Form translate={null} className={styles.profileForm}>\n          <ProfileImageChanger user={props.user} onChange={file => setFieldValue('profilePicture', file, false)}/>\n          <section className={styles.formFields}>\n            <Grid container spacing={2}>\n              <Grid item style={{marginTop: 5}} xs={12}>\n                <h5>פרטי חשבון</h5>\n              </Grid>\n              <Grid item style={{marginTop: 15}} xs={12} sm={6}>\n                <FormikTextInput\n                  label=\"שם פרטי(אנגלית)\"\n                  name=\"firstName\"\n                  autoComplete=\"fname\"\n                  values={values}\n                  errors={errors}\n                  touched={touched}\n                  onChange={(e) => {\n                    setFieldValue('firstName', allowOnlyEnglishAutoConvert(e.target.value).toUpperCase());\n                  }}\n                  loading={loading}\n                />\n\n              </Grid>\n              <Grid item style={{marginTop: 15}} xs={12} sm={6}>\n                <FormikTextInput\n                  label=\"שם משפחה(אנגלית)\"\n                  name=\"lastName\"\n                  autoComplete=\"lname\"\n                  values={values}\n                  errors={errors}\n                  touched={touched}\n                  onChange={(e) => {\n                    setFieldValue('lastName', allowOnlyEnglishAutoConvert(e.target.value).toUpperCase());\n                  }}\n                  loading={loading}\n                />\n              </Grid>\n              <Grid item style={{marginTop: 15}} xs={12} sm={6}>\n                <FormikTextInput\n                  label=\"מייל\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  values={values}\n                  errors={errors}\n                  touched={touched}\n                  setFieldError={setFieldError}\n                  customErrorsObject={{\n                    emailUniqueError: props.emailUniqueError && 'מייל זה כבר קיים',\n                  }}\n                  onChange={(e) => {\n                    setFieldValue('email', (e.target.value || '').toLowerCase());\n                  }}\n                  loading={loading}\n                />\n              </Grid>\n              <Grid item style={{marginTop: 15}} xs={12} sm={6}>\n                <FormikTextInput\n                  label=\"אימות כתובת מייל\"\n                  name=\"retypeEmail\"\n                  autoComplete={\"retypeEmail\"}\n                  values={values}\n                  errors={errors}\n                  touched={touched}\n                  loading={loading}\n                />\n              </Grid>\n              <Grid item style={{marginTop: 15}} xs={12} sm={6}>\n                <FormikPhoneInput\n                  label=\"מספר טלפון\"\n                  name=\"phone\"\n                  loading={loading}\n                />\n              </Grid>\n              <Grid item style={{marginTop: 15}} xs={12} sm={6}/>\n              <Grid item style={{marginTop: 10}} xs={12}>\n                <NewsLettersCheckbox errors={errors}\n                                     values={values}\n                                     setFieldValue={setFieldValue}\n                                     touched={touched}\n                                     loading={loading}\n                />\n              </Grid>\n              <Unless condition={jsonInit === JSON.stringify(values)}>\n                <Grid item style={{marginTop: 5}} xs={12}>\n                  <Button\n                    className={`${styles.updateButtons} ${styles.updateButton}`}\n                    fullWidth\n                    variant=\"contained\"\n                    disabled={isSubmitting || loading}\n                    onClick={submitForm}\n                  >\n                    עדכן\n                  </Button>\n                  <Button\n                    className={`${styles.updateButtons} ${styles.restoreButton}`}\n                    fullWidth\n                    variant=\"contained\"\n                    disabled={isSubmitting || loading}\n                    onClick={resetForm as any}\n                  >\n                    אפס\n                  </Button>\n                </Grid>\n              </Unless>\n            </Grid>\n          </section>\n          <FormikErrorScrollToTop/>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nProfileForm.defaultProps = {\n  onSubmit: (formValues) => new Promise((resolve) => {\n    \n    setTimeout(resolve, 1000);\n  }),\n  emailUniqueError: false,\n};\n\nexport default React.memo(ProfileForm);\n","import React from 'react';\nimport {Button, Grid} from '@material-ui/core';\nimport {Form, Formik} from 'formik';\nimport * as Yup from \"yup\";\nimport styles from './AuthenticationForm.module.scss';\nimport FormikPasswordInput from 'gui/components/formikPasswordInput/FormikPasswordInput';\nimport {IUser} from 'data/redux/reducers/authenticationReducer';\nimport {discardObjectKeys} from 'data/utils/calculators';\nimport {Else, If, Then, Unless} from 'react-if';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport FacebookLoginButtonContainer from 'data/redux/containers/facebookLoginButtonContainer';\nimport GoogleLoginButtonContainer from 'data/redux/containers/googleLoginButtonContainer';\nimport GoogleIcon from 'gui/components/icons/GoogleIcon';\nimport VerifiedUserRoundedIcon from '@material-ui/icons/VerifiedUserRounded';\nimport BlockRoundedIcon from '@material-ui/icons/BlockRounded';\nimport FormikErrorScrollToTop from 'formik-top-error-focus';\n\ninterface ISignUpFormProps {\n  onSubmit: (formValues) => Promise<any>;\n  emailUniqueError?: boolean;\n  user: IUser;\n  loading?: boolean;\n}\n\nconst yupSchema = Yup.object({\n  password: Yup.string()\n    .min(8, 'סיסמה קצרה מדיי, מינימום 8 אותיות או ספרות')\n    .max(80, 'סיסמה ארוכה מדיי')\n    .required('נדרשת סיסמה')\n    .matches(/[a-zA-Z0-9]/, 'סיסמה יכולה רק להכיל אותיות באנגלית ומספרים'),\n  retypePassword: Yup.string()\n    .min(8, 'סיסמה קצרה מדיי, מינימום 8 אותיות או ספרות')\n    .max(80, 'סיסמה ארוכה מדיי')\n    .oneOf([Yup.ref('password'), undefined], 'סיסמה צריכה להיות תואמת')\n    .required(\"נדרש להזין סיסמה שוב\"),\n});\n\n\nconst AuthenticationForm = ({loading, ...props}: ISignUpFormProps) => {\n  const init = {\n    password: \"\",\n    retypePassword: \"\",\n    showUpdatePassword: false,\n    ...discardObjectKeys(props.user, key => !['password', 'retypePassword'].includes(key))\n  };\n  const jsonInit = JSON.stringify(discardObjectKeys(init, key => !['password', 'retypePassword'].includes(key)));\n  return (\n    <Formik\n      initialValues={init}\n      validationSchema={yupSchema}\n      onSubmit={async (values, {setSubmitting}) => {\n        setSubmitting(false);\n        props\n          .onSubmit({\n            ...discardObjectKeys(values, key => !['password', 'retypePassword'].includes(key))\n          });\n      }}\n      enableReinitialize={true}\n    >\n      {({submitForm, isSubmitting, resetForm, setFieldValue, values, touched, errors}) => (\n        <Form translate={null} className={styles.authenticationForm}>\n          <section className={styles.formPad}/>\n          <section className={styles.formFields}>\n            <Grid container spacing={2}>\n              <Grid item style={{marginTop: 5}} xs={12}>\n                <h5>פרטי הזדהות/הזדהות עם סיסמא</h5>\n              </Grid>\n              <Grid item style={{marginTop: 5, marginBottom: -20}} xs={12}>\n                <h6>הזדהות עם סיסמה</h6>\n              </Grid>\n              <If condition={values.showUpdatePassword}>\n                <Then>\n                  <Grid item style={{marginTop: 15}} xs={12} sm={6}>\n                    <FormikPasswordInput\n                      label=\"סיסמה\"\n                      name=\"password\"\n                      cancelError={jsonInit === JSON.stringify(discardObjectKeys(values, key => !['password', 'retypePassword'].includes(key)))}\n                      cancelTouch={jsonInit === JSON.stringify(discardObjectKeys(values, key => !['password', 'retypePassword'].includes(key)))}\n                    />\n                  </Grid>\n                  <Grid item style={{marginTop: 15}} xs={12} sm={6}>\n                    <FormikPasswordInput\n                      label=\"סיסמה שוב\"\n                      name=\"retypePassword\"\n                      cancelError={jsonInit === JSON.stringify(discardObjectKeys(values, key => !['password', 'retypePassword'].includes(key)))}\n                      cancelTouch={jsonInit === JSON.stringify(discardObjectKeys(values, key => !['password', 'retypePassword'].includes(key)))}\n                    />\n                  </Grid>\n                  <Unless\n                    condition={jsonInit === JSON.stringify(discardObjectKeys(values, key => !['password', 'retypePassword'].includes(key)))}>\n                    <Grid item style={{marginTop: 5}} xs={12}>\n                      <Button\n                        className={`${styles.updateButtons} ${styles.updateButton}`}\n                        fullWidth\n                        variant=\"contained\"\n                        disabled={isSubmitting}\n                        onClick={submitForm}\n                      >\n                        עדכן\n                      </Button>\n                      <Button\n                        className={`${styles.updateButtons} ${styles.restoreButton}`}\n                        fullWidth\n                        variant=\"contained\"\n                        disabled={isSubmitting}\n                        onClick={resetForm as any}\n                      >\n                        אפס\n                      </Button>\n                    </Grid>\n                  </Unless>\n                  <Unless condition={true}>\n                    {() => (\n                      <>\n                        <Grid item style={{marginTop: 15}} xs={12} sm={6}>\n                          <If condition={!!props.user.facebookId}>\n                            <Then>\n                              <h6><FacebookIcon/>הזדהות עם פייסבוק(\n                                <span\n                                  style={{\n                                    color: 'rgb(89, 206, 82)',\n                                    fontWeight: 'bold'\n                                  }}>מחובר<VerifiedUserRoundedIcon/></span>)\n                              </h6>\n                              <FacebookLoginButtonContainer onClick={() => {\n                                props.onSubmit({facebookId: ''});\n                              }} style={{maxWidth: 166}}\n                                                            text='נתק את פייסבוק' onlyAuth/>\n                            </Then>\n                            <Else>\n                              <h6><FacebookIcon/>הזדהות עם פייסבוק(\n                                <span style={{color: 'red', fontWeight: 'bold'}}>מנותק<BlockRoundedIcon/></span>)</h6>\n                              <FacebookLoginButtonContainer disabled={!!props.user.facebookId} style={{maxWidth: 166}}\n                                                            text='חבר את פייסבוק' onlyAuth/>\n                            </Else>\n                          </If>\n                        </Grid>\n                        <Grid item style={{marginTop: 15}} xs={12} sm={6}>\n                          <If condition={!!props.user.googleId}>\n                            <Then>\n                              <h6><GoogleIcon/>הזדהות עם גוגל(\n                                <span\n                                  style={{\n                                    color: 'rgb(89, 206, 82)',\n                                    fontWeight: 'bold'\n                                  }}>מחובר<VerifiedUserRoundedIcon/></span>)\n                              </h6>\n                              <GoogleLoginButtonContainer onClick={() => {\n                                props.onSubmit({googleId: ''});\n                              }} style={{maxWidth: 166}}\n                                                          text='נתק את גוגל' onlyAuth/>\n                            </Then>\n                            <Else>\n                              <h6><GoogleIcon/>הזדהות עם גוגל(\n                                <span style={{color: 'red', fontWeight: 'bold'}}>מנותק<BlockRoundedIcon/></span>)</h6>\n                              <GoogleLoginButtonContainer disabled={!!props.user.googleId} style={{maxWidth: 166}}\n                                                          text='חבר את גוגל' onlyAuth/>\n                            </Else>\n                          </If>\n                        </Grid>\n                      </>\n                    )}\n                  </Unless>\n                </Then>\n                <Else>\n                  <Button\n                    className={`${styles.updateButtons} ${styles.updateButton}`}\n                    fullWidth\n                    variant=\"contained\"\n                    style={{marginTop: 20}}\n                    onClick={() => setFieldValue('showUpdatePassword', true, false)}\n                  >\n                    עדכן סיסמה\n                  </Button>\n                </Else>\n              </If>\n            </Grid>\n          </section>\n          <FormikErrorScrollToTop/>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nAuthenticationForm.defaultProps = {\n  onSubmit: (formValues) => new Promise((resolve) => {\n    \n    setTimeout(resolve, 1000);\n  }),\n};\n\nexport default React.memo(AuthenticationForm);\n","import React from 'react';\nimport styles from \"./Profile.module.scss\";\nimport AuthenticatedPage from 'gui/components/authenticatedPage/AuthenticatedPage';\nimport {IUser} from 'data/redux/reducers/authenticationReducer';\nimport {When} from 'react-if';\nimport ProfileForm from 'gui/pages/controlRouter/pages/profile/components/profileForm';\nimport {Divider} from '@material-ui/core';\nimport AuthenticationForm from 'gui/pages/controlRouter/pages/profile/components/authenticationForm';\nimport CrispChatContainer from 'data/redux/containers/crispChatContainer';\n\nexport interface IProfile {\n  user: IUser;\n  updateProfile: (formValues: []) => Promise<any>;\n  deleteProfile: (userId: number) => Promise<any>;\n  loading?: boolean;\n}\n\nclass Profile extends AuthenticatedPage<IProfile> {\n  render() {\n    return (\n      <div className={`${styles.profileContainer}`}>\n        <CrispChatContainer/>\n        <h2 className=\"topRow\">\n          פרופיל אישי\n        </h2>\n        <When condition={!!this.props.user}>\n          {() => <>\n            <ProfileForm loading={this.props.loading} user={this.props.user} onSubmit={this.props.updateProfile}/>\n            <Divider style={{marginBottom: 35, marginTop: 35}}/>\n            <AuthenticationForm loading={this.props.loading} user={this.props.user}\n                                onSubmit={this.props.updateProfile}/>\n          </>}\n        </When>\n      </div>\n    );\n  }\n\n}\n\nexport default Profile;\n","import {connect} from 'react-redux'\nimport {AuthenticatedMapDispatchToProps, AuthenticatedMapStateToProps} from 'data/redux/containers/commons/Commons';\nimport Profile from 'gui/pages/controlRouter/pages/profile';\nimport {userSelector} from 'data/redux/selectors/userSelector';\nimport {getDeleteUserActionCreator, getPatchUserActionCreator} from 'data/redux/actions/usersActions';\nimport {isLoadingSelector} from 'data/redux/selectors/guiSelector';\n\nconst mapStateToProps = (state) => {\n  return {\n    user: userSelector(state),\n    loading: isLoadingSelector(state),\n    ...AuthenticatedMapStateToProps(state),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateProfile: (formValues) => dispatch(getPatchUserActionCreator(formValues)),\n    //deleteProfile: (userId: number) => dispatch(getDeleteUserActionCreator(userId)),\n    ...AuthenticatedMapDispatchToProps(dispatch)\n  };\n};\n\n\nconst ProfileContainer = connect(mapStateToProps, mapDispatchToProps)(Profile as any);\n\nexport default ProfileContainer;\n","import React from \"react\";\nimport styles from './ControlRouter.module.scss';\nimport PageWithSidebarStructure from 'gui/components/pageWithSidebarStructure';\nimport PredefinedMenuList\n  from 'gui/pages/mainRouter/components/navigation/components/authenticationNavigator/components/loggedIn/components/menuList';\nimport {Route, Switch} from 'react-router';\nimport {linksMap} from 'data/utils/constants';\nimport DashboardContainer from 'data/redux/containers/dashboardContainer';\nimport ProductsByMeContainer from 'data/redux/containers/productsByMeContainer';\nimport OrdersByMeContainer from 'data/redux/containers/ordersByMeContainer';\nimport ProfileContainer from 'data/redux/containers/profileContainer';\n\nconst ControlRouter = () => {\n  return (<PageWithSidebarStructure\n      navigation={<PredefinedMenuList\n        className={`${styles.sideBarControlNavigationContainer} hideWhen767`}\n      />}>\n      <Switch>\n        <Route path={linksMap.dashboard}>\n          <DashboardContainer/>\n        </Route>\n        <Route path={linksMap.productsByMe}>\n          <ProductsByMeContainer/>\n        </Route>\n        <Route path={linksMap.ordersByMe}>\n          <OrdersByMeContainer/>\n        </Route>\n        <Route path={linksMap.profile}>\n          <ProfileContainer/>\n        </Route>\n      </Switch>\n    </PageWithSidebarStructure>\n  );\n};\n\nControlRouter.defaultProps = {};\n\nexport default ControlRouter;\n"],"sourceRoot":""}